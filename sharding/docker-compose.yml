version: '3.7'

services:
  db-node-1:
    image: mysql:8.0
    container_name: db-node-1
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: social-network
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - stage_network
    ports:
      - 3360:3306
    volumes:
      - db-node-1-data:/var/lib/mysql
      - db-node-1-log:/var/log/mysql

  db-node-2:
    image: mysql:8.0
    container_name: db-node-2
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: social-network
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - stage_network
    ports:
      - 3361:3306
    volumes:
      - db-node-2-data:/var/lib/mysql
      - db-node-2-log:/var/log/mysql

  db-node-3:
    image: mysql:8.0
    container_name: db-node-3
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: social-network
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - stage_network
    ports:
      - 3362:3306
    volumes:
      - db-node-3-data:/var/lib/mysql
      - db-node-3-log:/var/log/mysql

  db-node-4:
    image: mysql:8.0
    container_name: db-node-4
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: social-network
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - stage_network
    ports:
      - 3363:3306
    volumes:
      - db-node-4-data:/var/lib/mysql
      - db-node-4-log:/var/log/mysql

  proxysql:
    build:
      context: proxysql
      dockerfile: Dockerfile
    container_name: proxysql
    volumes:
      - proxysql-data:/var/lib/proxysql
    networks:
      - stage_network
    ports:
      # Mysql Client Port
      - "6033:6033"
      # Mysql Admin Port
      - "6032:6032"
    depends_on:
      - db-node-1
      - db-node-2
      - db-node-3

  migrator-1:
    build:
      context: ../tools/migrator
      dockerfile: Dockerfile
    image: mysql_migrator:sharding-1
    container_name: mysql-migrator-sharding-1
    environment:
      MIGRATIONS_PATH: "./migrations"
      DSN: "user:password@tcp(db-node-1:3306)/social-network"
      OPERATION: "up"
    volumes:
      - ./backend/migrations:/app/migrations
    networks:
      - stage_network
    depends_on:
      - db-node-1

  migrator-2:
    build:
      context: ../tools/migrator
      dockerfile: Dockerfile
    image: mysql_migrator:sharding-2
    container_name: mysql-migrator-sharding-2
    environment:
      MIGRATIONS_PATH: "./migrations"
      DSN: "user:password@tcp(db-node-2:3306)/social-network"
      OPERATION: "up"
    volumes:
      - ./backend/migrations:/app/migrations
    networks:
      - stage_network
    depends_on:
      - db-node-2

  migrator-3:
    build:
      context: ../tools/migrator
      dockerfile: Dockerfile
    image: mysql_migrator:sharding-3
    container_name: mysql-migrator-sharding-3
    environment:
      MIGRATIONS_PATH: "./migrations"
      DSN: "user:password@tcp(db-node-3:3306)/social-network"
      OPERATION: "up"
    volumes:
      - ./backend/migrations:/app/migrations
    networks:
      - stage_network
    depends_on:
      - db-node-3

  migrator-4:
    build:
      context: ../tools/migrator
      dockerfile: Dockerfile
    image: mysql_migrator:sharding-4
    container_name: mysql-migrator-sharding-4
    environment:
      MIGRATIONS_PATH: "./migrations"
      DSN: "user:password@tcp(db-node-4:3306)/social-network"
      OPERATION: "up"
    volumes:
      - ./backend/migrations:/app/migrations
    networks:
      - stage_network
    depends_on:
      - db-node-4

  redis:
    build:
      context: redis
      dockerfile: Dockerfile
    container_name: redis_sharding
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - stage_network

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    image: backend:sharding
    container_name: backend_sharding
    ports:
      - '9999:9999'
    environment:
      - ADDR=0.0.0.0:9999
      - STORAGE_DSN=user:password@tcp(proxysql:6033)/social-network?parseTime=true
      - CACHE_ADDR=redis_sharding:6379
      - CACHE_PASSWORD=password
      - CACHE_DB=0
      - JWT_SECRET=secret
      - JWT_ACCESS_TOKEN_TIME_EXPIRE=1h
      - JWT_REFRESH_TOKEN_TIME_EXPIRE=24h
    restart: unless-stopped
    networks:
      - stage_network
    depends_on:
      - proxysql
      - redis

volumes:
  db-node-1-data:
  db-node-2-data:
  db-node-3-data:
  db-node-4-data:
  db-node-1-log:
  db-node-2-log:
  db-node-3-log:
  db-node-4-log:
  proxysql-data:
  redis-data:

networks:
  stage_network:
    name: stage_network
    driver: bridge