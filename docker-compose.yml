version: '3.7'

services:
  storage:
    image: mysql:8.0
    container_name: mysql-storage
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: social-network
    volumes:
      - mysql-storage-data:/var/lib/mysql
    networks:
      - stage-network

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - '8080:8080'
    depends_on:
      - storage
    networks:
      - stage-network

  migrator:
    build:
      context: tools/migrator
      dockerfile: Dockerfile
    image: migrator:mysql
    container_name: mysql-migrator
    environment:
      MIGRATIONS_PATH: "./migrations"
      DSN: "user:password@tcp(mysql-storage:3306)/social-network"
      OPERATION: "up"
    volumes:
      - ./backend/migrations:/app/migrations
    depends_on:
      - storage
    networks:
      - stage-network

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    image: backend:stage
    container_name: backend
    ports:
      - '9999:9999'
    environment:
      - ADDR=0.0.0.0:9999
      - STORAGE_DSN=user:password@tcp(mysql-storage:3306)/social-network?parseTime=true
      - JWT_SECRET=secret
      - JWT_ACCESS_TOKEN_TIME_EXPIRE=1h
      - JWT_REFRESH_TOKEN_TIME_EXPIRE=24h
    depends_on:
      - storage
    networks:
      - stage-network

  frontend:
    build:
      context: front
      dockerfile: Dockerfile
    image: frontend:stage
    container_name: frontend
    ports:
      - '8081:80'
    depends_on:
      - backend
    networks:
      - stage-network

volumes:
  mysql-storage-data:

networks:
  stage-network:
    name: stage-network
    driver: bridge